[platformio]
; default_envs = esp32_16M
; default_envs = c3_mini_v1
; default_envs = ci

[common]
  build_flags =
  -D FACTORY_WIFI_SSID=\"HZTD67Fr45d\"
  -D FACTORY_WIFI_PASSWORD=\"kd-3575GH5rjZ\"

; debug_flags =
  ; -D EMSESP_DEBUG
  ; -D EMSESP_UART_DEBUG
  ; -D EMSESP_TEST
  ; -D EMSESP_FORCE_SERIAL
  ; -D ENABLE_CORS
  ; -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH

; libs_core =
  ; ArduinoJson
  ; https://github.com/dx168b/async-mqtt-client.git
  ; AsyncMqttClient

;[env]
; ensure transitive dependencies are included for correct platforms only
; lib_dep =
; lib_dep = https://github.com/sascha432/ESPAsyncWebServer.git
;    https://github.com/qlwz/ESPAsyncWebServer
;    https://github.com/espressif/arduino-esp32.git
; lib_compat_mode = strict

[env:ci]
; board_build.partitions = esp32_factory_4M.csv 

[env:esp32_16M]
extra_scripts =
  ; pre:scripts/build_interface.py
  scripts/rename_fw.py
;upload_protocol = espota
;upload_port = 192.168.0.64
;upload_flags = 
;    --port=8266
;    --auth=ems-esp-neo
upload_protocol = esptool
; upload_port = COM5
upload_flags = 

[env:esp32]
extra_scripts =
  ; pre:scripts/build_interface.py
  scripts/rename_fw.py

; platform = espressif32 ; standard
platform = https://github.com/platformio/platform-espressif32.git ; develop
; platform = https://github.com/tasmota/platform-espressif32/releases/download/v2.0.3rc1/platform-espressif32-2.0.3.zip
; board_build.partitions = min_spiffs.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions/
; build_flags = ${common.build_flags}  ${common.debug_flags}
upload_protocol = esptool
; upload_port = COM5
upload_flags = 
;upload_protocol = espota
;upload_port = 192.168.0.23
;upload_flags = 
;   --port=8266
;    --auth=ems-esp-neo

[env:esp32c3]
extra_scripts =
  ; pre:scripts/build_interface.py
  scripts/rename_fw.py
; board = lolin_c3_mini
; platform = espressif32
platform = https://github.com/platformio/platform-espressif32.git ; develop
; board_upload.flash_size = 4MB
; board_build.partitions = esp32_partition_4M.csv
; build_flags = ${common.build_flags}
; build_unflags = ${common.unbuild_flags}
upload_protocol = esptool

[env:esp32s2]
extra_scripts =
  ; pre:scripts/build_interface.py
  scripts/rename_fw.py
; board = lolin_s2_mini
; platform = espressif32
platform = https://github.com/platformio/platform-espressif32.git ; develop
; board_upload.flash_size = 4MB
; board_build.partitions = esp32_partition_4M.csv
; build_flags = ${common.build_flags} -D BOARD_HAS_PSRAM
; build_unflags = ${common.unbuild_flags}
upload_protocol = esptool
